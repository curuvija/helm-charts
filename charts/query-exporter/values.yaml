# Default values for query-exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- replicaCount - number of pods to run
replicaCount: 1

# -- Image to use for deployment
image:
  # -- repository to pull image
  repository: adonato/query-exporter
  # -- define pull policy
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""

# -- Image pull secrets if you want to host the image
imagePullSecrets: []

# -- overrides name (partial name override - chartName + nameOverride)
nameOverride: ""
# -- overrides name without having chartName in front of it
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # -- If not set and create is true, a name is generated using the fullname template
  name: ""

# -- pod annotations
podAnnotations: {}

# -- define pod security context https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
podSecurityContext: {}
  # fsGroup: 2000

# -- define security context https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container
securityContext:
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

# -- service configuration
service:
  # -- service type
  type: ClusterIP
  # -- service port
  port: 9560

# -- ingress configuration
ingress:
  # -- enable or disable ingress configuration creation
  enabled: false
  # -- ingress class name
  className: ""
  # -- ingress annotations
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- hosts
  hosts:
    # -- hostname
    - host: chart-example.local
      # -- paths
      paths:
        # -- path
        - path: /
          # -- path type
          pathType: ImplementationSpecific
  # -- tls configuration
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- specify resources
resources: 
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

## -- autoscale pods with HPA
autoscaling:
  # -- enable or disable autoscaling
  enabled: false
  # -- minimum number of replicas
  minReplicas: 1
  # -- maximum number of replicas
  maxReplicas: 100
  # -- configure at what percentage to trigger autoscalling
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- define node selector to schedule your pod(s)
nodeSelector: {}

# -- provide tolerations
tolerations: []

# -- configure affinity
affinity: {}

livenessProbe:
  httpGet:
    path: /
    port: 9560
readinessProbe:
  httpGet:
    path: /
    port: 9560

# -- configure Prometheus Service monitor to expose metrics
prometheus:
  monitor:
    # -- enable or disable creation of service monitor
    enabled: true
    # -- add additonal labels to service monitoring
    additionalLabels: {}
    # -- Prometheus scraping interval
    interval: 15s
    # -- provide namespace where to create this service monitor
    namespace: []
    # -- path where you want to expose metrics
    path: "/metrics"

# -- Configure your database access and metrics to expose
config: |-
  databases:
    db1:
      dsn: sqlite://
      connect-sql:
        - PRAGMA application_id = 123
        - PRAGMA auto_vacuum = 1
      labels:
        region: us1
        app: app1

  metrics:
    metric1:
      type: gauge
      description: A sample gauge

  queries:
    query1:
      interval: 5
      databases: [db1]
      metrics: [metric1]
      sql: SELECT random() / 1000000000000000 AS metric1