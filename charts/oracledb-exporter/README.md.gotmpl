{{ template "chart.header" . }}
{{ template "chart.description" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}{{ template "chart.appVersionBadge" . }}

## Additional Information

[oracledb-exporter](https://github.com/iamseth/oracledb_exporter) exposes Prometheus metrics based on Oracle SQL queries. 
You can find more details about it here https://github.com/albertodonato/query-exporter. 

{{ template "chart.maintainersSection" . }}

## Installing the Chart

To install the chart with the release name `my-release`:

```console
$ helm repo add curuvija https://curuvija.github.io/helm-charts/
$ helm repo update
$ helm install curuvija/oracledb-exporter --version 0.1.0
```

## Configure Prometheus scraping

If you use Prometheus operator PodMonitor will be created to configure your instance to scrape it.

If you don't use Prometheus operator then you can use this configuration to configure scraping (and disable PodMonitor creation in Helm values):

```yaml
    additionalScrapeConfigs:
    - job_name: oracledb-exporter-scrape
      honor_timestamps: true
      scrape_interval: 15s
      scrape_timeout: 10s
      metrics_path: /metrics
      scheme: http
      follow_redirects: true
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app, __meta_kubernetes_pod_labelpresent_app]
        separator: ;
        regex: (oracledb-exporter);true
        replacement: $1
        action: keep
      - source_labels: [__meta_kubernetes_pod_container_port_number]
        separator: ;
        regex: "9161"
        replacement: $1
        action: keep
      kubernetes_sd_configs:
      - role: pod
```
## Grafana Dashboard

There is an example Grafana dashboard here https://grafana.com/grafana/dashboards/3333.
{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

{{ template "helm-docs.versionFooter" . }}